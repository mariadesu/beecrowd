#include <bits/stdc++.h>
using namespace std;

long long exp(long long base, long long e, long long n){
    if(e==0){
        return 1;
    }
    else if (e%2==1){
        return (exp(base, e-1, n)*base)%n;
    }
    else{
        long long x = exp(base, e/2, n);
        return (x*x)%n;
    }
}

long long horner_a(string s, long long n){
    long long base = s.at(0) - '0';
    
    for(long long i = 1; i < s.size(); i++){
        base = base * 10 + (s.at(i)-'0');
        base = base % n;
    }
    return base;
}

long long horner_b(long long a, string b, long long n){
    long long m = 1;
    
    for(long long i = 0; i < b.size(); i++){
        long long d = b.at(i) - '0';
        m = (exp(m, 10, n)*exp(a, d, n))%n;
    }
    
    
    return m;
}

void potenciacao(){
    string a, b;
    cin >> a >> b;
    long long m;
    cin >> m;
    
    //calcular a - a) esquema de horner
    long long aa = horner_a(a, m);
    //calcular a^b - c)
    
    cout << horner_b(aa, b, m) << endl;
    
}

int main() {
	int t;
	cin >> t;
	
	while (t--) {
		potenciacao();
	}

	return 0;
}
